C251 COMPILER V5.60.0,  MY_IIC                                                             09/10/23  22:20:57  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE MY_IIC
OBJECT MODULE PLACED IN .\Out_File\MY_IIC.obj
COMPILER INVOKED BY: D:\Software\Keil_v5\C251\BIN\C251.EXE ..\USER\src\MY_IIC.c XSMALL UNSIGNED_CHAR WARNINGLEVEL(3) BRO
                    -WSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\U
                    -SER\inc;..\USER\src) DEBUG PRINT(.\Out_File\MY_IIC.lst) OBJECT(.\Out_File\MY_IIC.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           * COPYRIGHT NOTICE
    3           * Copyright (c) 2018,逐飞科技
    4           * All rights reserved.
    5           * 技术讨论QQ群：179029047
    6           *
    7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
    8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
    9           *
   10           * @file                模拟IIC
   11           * @company                     成都逐飞科技有限公司
   12           * @author              逐飞科技(QQ3184284598)
   13           * @version             查看common.h内VERSION宏定义
   14           * @Software            MDK FOR C251 V5.60
   15           * @Target core         LPC54606J512BD100
   16           * @Taobao              https://seekfree.taobao.com/
   17           * @date                2018-05-24
   18           * @note                
   19                                                  接线定义：
   20                                                  ------------------------------------ 
   21                                                          SCL                 查看SEEKFREE_IIC文件内的SEEKFREE_SCL宏定义
   22                                                          MY_SDA                 查看SEEKFREE_IIC文件内的SEEKFREE_SDA宏定义
   23                                                  ------------------------------------ 
   24           ********************************************************************************************************
             -************/
   25          
   26          
   27          #include "MY_IIC.h"
   28          
   29          
   30          
   31          #define MY_SDA                          MY_SIMIIC_SDA_PIN
   32          #define MY_SDA0()          MY_SIMIIC_SDA_PIN = 0                //IO口输出低电平
   33          #define MY_SDA1()          MY_SIMIIC_SDA_PIN = 1                //IO口输出高电平  
   34          #define MY_SCL0()          MY_SIMIIC_SCL_PIN = 0                //IO口输出低电平
   35          #define MY_SCL1()          MY_SIMIIC_SCL_PIN = 1                //IO口输出高电平
   36               
   37          #define ack 1      //主应答
   38          #define no_ack 0   //从应答      
   39          
   40          //-------------------------------------------------------------------------------------------------------
             -------------
   41          //  @brief      模拟IIC初始化
   42          //  @return     void                                            
   43          //  @since      v1.0
   44          //  Sample usage:                               
   45          //-------------------------------------------------------------------------------------------------------
             -------------
   46          void  my_simiic_init(void)
   47          {
   48   1              //GPIO已在board_init()中初始化。
   49   1      }
   50          
   51          //-------------------------------------------------------------------------------------------------------
             -------------
   52          //  @brief      模拟IIC延时
C251 COMPILER V5.60.0,  MY_IIC                                                             09/10/23  22:20:57  PAGE 2   

   53          //  @return     void                                            
   54          //  @since      v1.0
   55          //  Sample usage:                               如果IIC通讯失败可以尝试增加j的值
   56          //-------------------------------------------------------------------------------------------------------
             -------------
   57          void my_simiic_delay(void)
   58          {
   59   1          uint16 j=0;   
   60   1              while(j--);
   61   1      }
   62          
   63          
   64          //内部使用，用户无需调用
   65          void my_simiic_start(void)
   66          {
   67   1              MY_SDA1();
   68   1              MY_SCL1();
   69   1              my_simiic_delay();
   70   1              MY_SDA0();
   71   1              my_simiic_delay();
   72   1              MY_SCL0();
   73   1      }
   74          
   75          //内部使用，用户无需调用
   76          void my_simiic_stop(void)
   77          {
   78   1              MY_SDA0();
   79   1              MY_SCL0();
   80   1              my_simiic_delay();
   81   1              MY_SCL1();
   82   1              my_simiic_delay();
   83   1              MY_SDA1();
   84   1              my_simiic_delay();
   85   1      }
   86          
   87          //主应答(包含ack:MY_SDA=0和no_ack:MY_SDA=0)
   88          //内部使用，用户无需调用
   89          void my_simiic_sendack(unsigned char ack_dat)
   90          {
   91   1          MY_SCL0();
   92   1              my_simiic_delay();
   93   1              if(ack_dat) MY_SDA0();
   94   1          else        MY_SDA1();
   95   1      
   96   1          MY_SCL1();
   97   1          my_simiic_delay();
   98   1          MY_SCL0();
   99   1          my_simiic_delay();
  100   1      }
  101          
  102          
  103          static int sccb_waitack(void)
  104          {
  105   1          MY_SCL0();
  106   1      
  107   1              my_simiic_delay();
  108   1              
  109   1              MY_SCL1();
  110   1          my_simiic_delay();
  111   1              
  112   1          if(MY_SDA)           //应答为高电平，异常，通信失败
  113   1          {
  114   2      
  115   2              MY_SCL0();
  116   2              return 0;
  117   2          }
C251 COMPILER V5.60.0,  MY_IIC                                                             09/10/23  22:20:57  PAGE 3   

  118   1      
  119   1          MY_SCL0();
  120   1              my_simiic_delay();
  121   1          return 1;
  122   1      }
  123          
  124          //字节发送程序
  125          //发送c(可以是数据也可是地址)，送完后接收从应答
  126          //不考虑从应答位
  127          //内部使用，用户无需调用
  128          void my_send_ch(uint8 c)
  129          {
  130   1              uint8 i = 8;
  131   1          while(i--)
  132   1          {
  133   2              if(c & 0x80)    MY_SDA1();//MY_SDA 输出数据
  134   2              else                    MY_SDA0();
  135   2              c <<= 1;
  136   2              my_simiic_delay();
  137   2              MY_SCL1();                //SCL 拉高，采集信号
  138   2              my_simiic_delay();
  139   2              MY_SCL0();                //SCL 时钟线拉低
  140   2          }
  141   1              sccb_waitack();
  142   1      }
  143          
  144          //字节接收程序
  145          //接收器件传来的数据，此程序应配合|主应答函数|使用
  146          //内部使用，用户无需调用
  147          uint8 my_read_ch(uint8 ack_x)
  148          {
  149   1          uint8 i;
  150   1          uint8 c;
  151   1          c=0;
  152   1          MY_SCL0();
  153   1          my_simiic_delay();
  154   1          MY_SDA1();             
  155   1      
  156   1          for(i=0;i<8;i++)
  157   1          {
  158   2              my_simiic_delay();
  159   2              MY_SCL0();         //置时钟线为低，准备接收数据位
  160   2              my_simiic_delay();
  161   2              MY_SCL1();         //置时钟线为高，使数据线上数据有效
  162   2              my_simiic_delay();
  163   2              c<<=1;
  164   2              if(MY_SDA) 
  165   2              {
  166   3                  c+=1;   //读数据位，将接收的数据存c
  167   3              }
  168   2          }
  169   1      
  170   1              MY_SCL0();
  171   1              my_simiic_delay();
  172   1              my_simiic_sendack(ack_x);
  173   1              
  174   1          return c;
  175   1      }
  176          
  177          //-------------------------------------------------------------------------------------------------------
             -------------
  178          //  @brief      模拟IIC写数据到设备寄存器函数
  179          //  @param      dev_add                 设备地址(低七位地址)
  180          //  @param      reg                             寄存器地址
  181          //  @param      dat                             写入的数据
  182          //  @return     void                                            
C251 COMPILER V5.60.0,  MY_IIC                                                             09/10/23  22:20:57  PAGE 4   

  183          //  @since      v1.0
  184          //  Sample usage:                               
  185          //-------------------------------------------------------------------------------------------------------
             -------------
  186          void my_simiic_write_reg(uint8 dev_add, uint8 reg, uint8 dat)
  187          {
  188   1              my_simiic_start();
  189   1        my_send_ch( (dev_add<<1) | 0x00);   //发送器件地址加写位
  190   1              my_send_ch( reg );                               //发送从机寄存器地址
  191   1              my_send_ch( dat );                               //发送需要写入的数据
  192   1              my_simiic_stop();
  193   1      }
  194          
  195          
  196          //-------------------------------------------------------------------------------------------------------
             -------------
  197          //  @brief      模拟IIC从设备寄存器读取数据
  198          //  @param      dev_add                 设备地址(低七位地址)
  199          //  @param      reg                             寄存器地址
  200          //  @param      type                    选择通信方式是IIC  还是 SCCB
  201          //  @return     uint8                   返回寄存器的数据                        
  202          //  @since      v1.0
  203          //  Sample usage:                               
  204          //-------------------------------------------------------------------------------------------------------
             -------------
  205          uint8 my_simiic_read_reg(uint8 dev_add, uint8 reg, MY_IIC_type type)
  206          {
  207   1              uint8 dat;
  208   1              my_simiic_start();
  209   1          my_send_ch( (dev_add<<1) | 0x00);  //发送器件地址加写位
  210   1              my_send_ch( reg );                              //发送从机寄存器地址
  211   1              if(type == SCCB)my_simiic_stop();
  212   1              
  213   1              my_simiic_start();
  214   1              my_send_ch( (dev_add<<1) | 0x01);  //发送器件地址加读位
  215   1              dat = my_read_ch(no_ack);                               //读取数据
  216   1              my_simiic_stop();
  217   1              
  218   1              return dat;
  219   1      }
  220          
  221          //-------------------------------------------------------------------------------------------------------
             -------------
  222          //  @brief      模拟IIC读取多字节数据
  223          //  @param      dev_add                 设备地址(低七位地址)
  224          //  @param      reg                             寄存器地址
  225          //  @param      dat_add                 数据保存的地址指针
  226          //  @param      num                             读取字节数量
  227          //  @param      type                    选择通信方式是IIC  还是 SCCB
  228          //  @return     uint8                   返回寄存器的数据                        
  229          //  @since      v1.0
  230          //  Sample usage:                               
  231          //-------------------------------------------------------------------------------------------------------
             -------------
  232          void my_simiic_read_regs(uint8 dev_add, uint8 reg, uint8 *dat_add, uint8 num, MY_IIC_type type)
  233          {
  234   1              my_simiic_start();
  235   1          my_send_ch( (dev_add<<1) | 0x00);  //发送器件地址加写位
  236   1              my_send_ch( reg );                              //发送从机寄存器地址
  237   1              if(type == SCCB)my_simiic_stop();
  238   1              
  239   1              my_simiic_start();
  240   1              my_send_ch( (dev_add<<1) | 0x01);  //发送器件地址加读位
  241   1          while(--num)
  242   1          {
  243   2              *dat_add = my_read_ch(ack); //读取数据
C251 COMPILER V5.60.0,  MY_IIC                                                             09/10/23  22:20:57  PAGE 5   

  244   2              dat_add++;
  245   2          }
  246   1          *dat_add = my_read_ch(no_ack); //读取数据
  247   1              my_simiic_stop();
  248   1      }
  249          
  250          
  251          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       397     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------          5
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
