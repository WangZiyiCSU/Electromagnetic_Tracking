C251 COMPILER V5.60.0,  control                                                            01/11/23  20:23:49  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE control
OBJECT MODULE PLACED IN .\Out_File\control.obj
COMPILER INVOKED BY: D:\Software\Keil_v5\C251\BIN\C251.EXE ..\USER\src\control.c XSMALL UNSIGNED_CHAR WARNINGLEVEL(3) BR
                    -OWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\
                    -USER\inc;..\USER\src) DEBUG PRINT(.\Out_File\control.lst) OBJECT(.\Out_File\control.obj) 

stmt  level    source

    1          /* Includes ------------------------------------------------------------------*/
    2          #include "control.h"
    3          #include "math.h"
    4          #include "circle.h"
    5          #include "hinder.h"
    6          #include "ramp.h"
    7          #include "garage.h"
    8          /* Includes ------------------------------------------------------------------*/
    9          
   10          //电机控制相关
   11          void Speed_Control(float left, float right);            //电机闭环控制
   12          void Speed_diff_control();                                                      //电机闭环+差速控制
   13          
   14          void Stop_after(float distance);                                        //运行指定距离自动停车 单位m
   15          
   16          //条件检测相关
   17          void Circle_judge_dir();   //有方向环岛判断
   18          void Out_Track_judge();    //出界检测
   19          
   20          /****************************************************
   21           * @name              堵转检测
   22           * @function      block_judge
   23           * @parameter     NULL
   24           * @return                NULL
   25           * @date                  2023/7/27
   26           ***************************************************/
   27          void block_judge()
   28          {
   29   1              static int count = 0;
   30   1          //左右电机速度绝对值均值小于50持续80个采样周期
   31   1              if((my_abs(car.motor_left.speed_Current) + my_abs(car.motor_right.speed_Current)) / 2 < 50)
   32   1          {
   33   2                      count++;
   34   2              if(count > 80)
   35   2              {
   36   3                              Force_Stop();
   37   3                      }
   38   2              }
   39   1      }
   40          /****************************************************
   41           * @name              走一段距离停止
   42           * @function      Stop_after
   43           * @parameter     NULL
   44           * @return                NULL
   45           * @date                  2023/7/27
   46           ***************************************************/
   47          void Stop_after(float distance)
   48          {
   49   1              if (car.distance > distance * 100)
   50   1              {
   51   2                      Force_Stop();
   52   2                      car.distance = 0;
   53   2              }
   54   1      }
   55          /****************************************************
   56           * @name              Out_Track_judge
   57           * @function      出界保护
C251 COMPILER V5.60.0,  control                                                            01/11/23  20:23:49  PAGE 2   

   58           * @parameter     NULL
   59           * @return                NULL
   60           * @date                  2023/7/12
   61           ***************************************************/
   62          void Out_Track_judge()
   63          {
   64   1              static int out_count = 0;
   65   1      
   66   1          //不在出入库或坡道时
   67   1              if (car.road_type != OUT_GARAGE &&car.road_type != RAMP&& car.road_type != ENTER_GARAGE)
   68   1              {
   69   2                      if (car.adc_parameter.adc_strength <= 10 )
   70   2                      {
   71   3                              out_count++;
   72   3                              if (out_count > 50)
   73   3                              {
   74   4                                      out_count = 0;
   75   4                                      Force_Stop();
   76   4                                      car.road_type = OUT_TRACK;
   77   4                              }
   78   3                      }
   79   2                      else
   80   2                      {
   81   3                              out_count = 0;
   82   3                      }
   83   2              }
   84   1      }
   85          /****************************************************
   86           * @name              Straight_control
   87           * @function      直道转向控制
   88           * @parameter     NULL
   89           * @return                NULL
   90           * @date                  2023/7/4
   91           ***************************************************/
   92          void Straight_control()
   93          {
   94   1              static int count_10ms = 0;
   95   1      
   96   1              /***************************元素检测****************************/
   97   1          if(car.distance > 5)
   98   1          {           
   99   2                /*******停车********/
  100   2      //              if(car.garage.MODE==0)
  101   2              if((car.element.excel[car.element.ELEMENT_NUM]==9)||(car.element.excel[car.element.ELEMENT_NUM]==10))
  102   2              {
  103   3                      if(car.element.excel[car.element.ELEMENT_NUM]==9)//左入库
  104   3                      {
  105   4                              car.garage.DIR = LEFT;
  106   4                      }
  107   3                      if(car.element.excel[car.element.ELEMENT_NUM]==10)//右入库
  108   3                      {
  109   4                              car.garage.DIR = RIGHT;
  110   4                      }
  111   3                /******正向入库距离检测******/
  112   3                      Enter_Garage_Pre();
  113   3                /******正向入库距离检测******/
  114   3                      Magnet_Judge();
  115   3              }
  116   2      //              else if(car.garage.MODE==1)
  117   2      //              Enter_Garage_Pre();
  118   2           /*******停车********/
  119   2      
  120   2               /*******圆环********/
  121   2               if((car.element.excel[car.element.ELEMENT_NUM]==2)||(car.element.excel[car.element.ELEMENT_NUM]==3)||(c
             -ar.element.excel[car.element.ELEMENT_NUM]==4)||(car.element.excel[car.element.ELEMENT_NUM]==5)||(car.element.excel[car.e
             -lement.ELEMENT_NUM]==11)||(car.element.excel[car.element.ELEMENT_NUM]==12))
C251 COMPILER V5.60.0,  control                                                            01/11/23  20:23:49  PAGE 3   

  122   2              {
  123   3                      Circle_judge_dir();
  124   3              } 
  125   2               /*******圆环********/
  126   2                      
  127   2               /*******坡道********/
  128   2               if(car.element.excel[car.element.ELEMENT_NUM]==8)
  129   2               {
  130   3                      Ramp_judge();
  131   3               }
  132   2               /*******坡道********/
  133   2      
  134   2               /*******堵转*********/
  135   2                block_judge();
  136   2               /*******堵转*********/
  137   2                       
  138   2               /*******出界保护******/
  139   2                Out_Track_judge();
  140   2               /*******出界保护******/
  141   2      /*4320&&(car.distance>4450)*/
  142   2              /*******障碍物*********/
  143   2              if(((car.element.excel[car.element.ELEMENT_NUM]==6)||(car.element.excel[car.element.ELEMENT_NUM]==7))
  144   2              &&((car.distance-car.circle.out_point)>car.circle_distance)
  145   2              &&((car.distance-car.ramp.in_point)>car.ramp_distance))
  146   2              {
  147   3                      //左避障
  148   3                      if(car.element.excel[car.element.ELEMENT_NUM]==6)
  149   3                      {
  150   4                              car.hinder.dir=LEFT;
  151   4                      }
  152   3                      //右避障
  153   3                      if(car.element.excel[car.element.ELEMENT_NUM]==7)
  154   3                      {
  155   4                              car.hinder.dir=RIGHT;
  156   4                      }
  157   3                      hinder_judge();
  158   3              }
  159   2               /*******障碍物********/
  160   2      }       
  161   1      
  162   1          Stop_after(car.meter_distance);
  163   1      
  164   1              /***************************元素检测****************************/
  165   1              car.adc_parameter.adc_min[LEFT_H]  = 400;
  166   1              car.adc_parameter.adc_min[MIDDLE]  = 400;
  167   1              car.adc_parameter.adc_min[RIGHT_H] = 400;
  168   1              error_calculate(car.straight.kp,car.straight.kd);
  169   1      
  170   1              /******转向控制******/
  171   1              motor_control(car.straight.base_speed-car.steering.duty,car.straight.base_speed+car.steering.duty);
  172   1              /******转向控制******/
  173   1      }
  174          
  175          /****************************************************
  176           * @name              motor_control
  177           * @function      圆环
  178           * @parameter     left_speed  左轮速度
  179           *                right_speed 右轮速度
  180           * @return                NULL
  181           * @date                  2023/7/4
  182           ***************************************************/
  183          void motor_control(float left_speed,float right_speed){
  184   1      
  185   1              //给左右电机期望转速
  186   1              car.motor_left.speed_Expected  = left_speed;
  187   1              car.motor_right.speed_Expected = right_speed;
C251 COMPILER V5.60.0,  control                                                            01/11/23  20:23:49  PAGE 4   

  188   1      
  189   1              if(car.start_flag)
  190   1          {
  191   2                      MotorPID_Caculate(&car.motor_left);
  192   2                      MotorPID_Caculate(&car.motor_right);
  193   2              }
  194   1              MotorPWM_Out(car.motor_left.duty, car.motor_right.duty);
  195   1      }
  196          /****************************************************
  197           * @name              error_calculate
  198           * @function      偏差计算
  199           * @parameter     error_kp  一次项系数
  200           *                gyro_kp   陀螺仪抑制
  201           * @return                NULL
  202           * @date                  2023/7/4
  203           ***************************************************/
  204          void error_calculate(float error_kp,float gyro_kp)
  205          {
  206   1      
  207   1              car.steering.linear_error_kp = error_kp;
  208   1              car.steering.gyro_kp         = gyro_kp;
  209   1      
  210   1              get_error_normal(&car.adc_parameter); //计算偏差        
  211   1              car.steering.error_now = car.adc_parameter.adc_error ;  
  212   1              //方向环计算
  213   1              if(car.lose_flag)       //丢线状态
  214   1              {       
  215   2                      if(car.adc_parameter.adc_normalized[LEFT_H]>3&&car.adc_parameter.adc_normalized[RIGHT_H]>3)
  216   2                      {
  217   3                              car.lose_flag = 0;
  218   3                              //BEEP_OFF;
  219   3                      }
  220   2              }
  221   1              else
  222   1              {
  223   2                      if(car.adc_parameter.adc_normalized[LEFT_H]<1&&car.adc_parameter.adc_normalized[RIGHT_H]<1)
  224   2                      {
  225   3                              car.lose_flag = 1;
  226   3                              //BEEP_ON;
  227   3                      }
  228   2                      car.steering.duty = car.steering.linear_error_kp*car.steering.error_now                                
             -               //一次偏差   
  229   2                                                              + car.steering.quadratic_error_kp*car.steering.error_now*abs(car.steering.error_now)    //二次偏差
  230   2                                                              + car.steering.error_kd*(car.steering.error_now - car.steering.error_last)                      //偏差差分
  231   2                                                              - car.steering.gyro_kp *icmdata.YawVelocity;                                                                                                                  //陀螺仪抑制
  232   2      //              car.steering.duty = 8 * car.steering.error_now + 5 * (car.steering.error_now - car.steering.error_las
             -t);
  233   2              car.steering.error_last = car.steering.error_now;
  234   2              }
  235   1              //转向PWM限幅
  236   1              if(car.steering.duty > 250)      car.steering.duty = 250;
  237   1              else if(car.steering.duty < -250)car.steering.duty =-250;
  238   1      }
  239          /****************************************************
  240           * @name              Normal_Tracing
  241           * @function      寻迹模式
  242           * @parameter     NULL
  243           * @return                NULL
  244           * @date                  2023/7/4
  245           ***************************************************/
  246          void Normal_Tracing()
  247          {
  248   1      
  249   1              //电感数据采集
  250   1              ADC_Process(&car.adc_parameter);           //均值滤波
  251   1              ADC_Normalization(&car.adc_parameter); //归一化 0-100
C251 COMPILER V5.60.0,  control                                                            01/11/23  20:23:49  PAGE 5   

  252   1              //陀螺仪数据采集
  253   1              ICM_OneOrderFilter();   
  254   1              //速度测量
  255   1              EncoderPulseGet();
  256   1              //风扇
  257   1      
  258   1              //状态机
  259   1              switch (car.road_type)
  260   1              {
  261   2                      //直道
  262   2                      case STRAIGHT:
  263   2                              Straight_control(); //直道方向控制
  264   2                              break;
  265   2                      //入库
  266   2                      case ENTER_GARAGE:
  267   2                              Enter_garage_back(car.garage.DIR); //1 右库 0 左库
  268   2                              break;
  269   2                      //出库
  270   2                      case OUT_GARAGE:
  271   2                              
  272   2                      /*****出入库方向根据元素表判断*******/
  273   2                      if(car.element.excel[car.element.ELEMENT_NUM]==0)
  274   2                      {
  275   3                              car.garage.DIR= 0;   //（左0右1）
  276   3                      }
  277   2                      if(car.element.excel[car.element.ELEMENT_NUM]==1)
  278   2                      {
  279   3                              car.garage.DIR= 1;   //（左0右1）
  280   3                      }
  281   2                      /*****出入库方向根据元素表判断*******/
  282   2      
  283   2                              Out_garage(car.garage.DIR);
  284   2                              break;
  285   2                      //圆环
  286   2                      case CIRCLE:
  287   2                              Circle_control();
  288   2                              car.road_type_last = CIRCLE;
  289   2                              break;
  290   2                      //坡道
  291   2                      case RAMP:
  292   2      //                      Ramp_control();
  293   2      //                      car.road_type_last = RAMP;
  294   2                        break;
  295   2                      //障碍
  296   2                      case HINDER:
  297   2                              hinder_control();
  298   2                              break;
  299   2                      //正向入库
  300   2                      case ENTER_GARAGE_forward:
  301   2                              Enter_Garage_control();
  302   2                              break;
  303   2              }
  304   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       946     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         6     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
C251 COMPILER V5.60.0,  control                                                            01/11/23  20:23:49  PAGE 6   

  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        18     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
