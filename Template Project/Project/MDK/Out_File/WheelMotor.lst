C251 COMPILER V5.60.0,  WheelMotor                                                         27/09/23  22:43:24  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE WheelMotor
OBJECT MODULE PLACED IN .\Out_File\WheelMotor.obj
COMPILER INVOKED BY: D:\Software\Keil_v5\C251\BIN\C251.EXE ..\USER\src\WheelMotor.c XSMALL INTR2 WARNINGLEVEL(3) BROWSE 
                    -INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\
                    -inc;..\USER\src;..\MDK) DEBUG PRINT(.\Out_File\WheelMotor.lst) OBJECT(.\Out_File\WheelMotor.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           * @file                WheellMotor.c
    3           * @author              Wang
    4           * @version             1.0.0
    5           * @version         最初版本
    6           * @brief           车轮电机的驱动程序相关
    7           * @date                2023-09-23
    8           ********************************************************************************************************
             -************/
    9          
   10          #include "headfile.h"
   11          
   12          uint8 motor_rotate_dir;        //dir >= 0: 正转；dir < 0: 反转
   13          int16 motor_pwm_duty;          //占空比调节           
   14          
   15          void WheelMotor_init(void)
   16          {
   17   1          //电机方向、PWM初始化
   18   1          
   19   1          //电机1（左侧）
   20   1          gpio_mode(LEFT_MOTOR_DIR_PIN,GPO_PP);   //初始化DIR1  使用P62引脚  初始化为推挽输出
   21   1          pwm_init(LEFT_MOTOR_PWM_PIN, 10000, 0); //初始化PWM1  使用P60引脚  初始化频率为10Khz
   22   1      
   23   1          //电机2（右侧）
   24   1          gpio_mode(RIGHT_MOTOR_DIR_PIN,GPO_PP);   //初始化PWM2  使用P66引脚  初始化为推挽输出
   25   1          pwm_init(RIGHT_MOTOR_PWM_PIN, 10000, 0); //初始化DIR2  使用P64引脚  初始化频率为10Khz
   26   1      }
   27          
   28          void WheelMotor_output(int16 left_duty, int16 right_duty)
   29          {
   30   1              
   31   1          if(left_duty > MOTOR_DUTY_MAX)
   32   1          {
   33   2              left_duty = MOTOR_DUTY_MAX;
   34   2          }
   35   1          else if(left_duty < -MOTOR_DUTY_MAX)
   36   1          {
   37   2              left_duty = -MOTOR_DUTY_MAX;
   38   2          }
   39   1      
   40   1              if(right_duty > MOTOR_DUTY_MAX)
   41   1          {
   42   2              right_duty = MOTOR_DUTY_MAX;
   43   2          }
   44   1          else if(right_duty < -MOTOR_DUTY_MAX)
   45   1          {
   46   2              right_duty = -MOTOR_DUTY_MAX;
   47   2          }
   48   1              
   49   1          if(left_duty >= 0 )
   50   1          {
   51   2                      LEFT_MOTOR_DIR_PIN = 1;
   52   2          }
   53   1          else if(left_duty < 0 )
   54   1          {
   55   2              LEFT_MOTOR_DIR_PIN = 0;
C251 COMPILER V5.60.0,  WheelMotor                                                         27/09/23  22:43:24  PAGE 2   

   56   2              left_duty = -left_duty;
   57   2          }
   58   1      
   59   1          if(right_duty >= 0 )
   60   1          {
   61   2                      RIGHT_MOTOR_DIR_PIN = 1;
   62   2          }
   63   1          else if(right_duty < 0 )
   64   1          {
   65   2              RIGHT_MOTOR_DIR_PIN = 0;
   66   2                      right_duty = -right_duty;
   67   2          }           
   68   1      
   69   1              pwm_duty(LEFT_MOTOR_PWM_PIN, left_duty); 
   70   1              pwm_duty(RIGHT_MOTOR_PWM_PIN, right_duty);
   71   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       187     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         3     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
